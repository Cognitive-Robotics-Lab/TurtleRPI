<launch>

  <!-- Enable breaker 1 for the kinect -->
  <node pkg="turtlebot_node" type="kinect_breaker_enabler.py" name="kinect_breaker_enabler"/>

  <!-- Kinect -->
  <node pkg="nodelet" type="nodelet" name="openni_manager" output="screen" respawn="true" args="manager"/>



  <node pkg="pcl_decimator" type="pcl_decimator" respawn="true" name="pcl_slicer" output="screen"> 
	  <param name="field_name" value="y" />
    <param name="num_slices" value="5" />
    <param name="slice_width" value="0.01" />
    <param name="start_threshold" value="-1.0" />
    <param name="end_threshold" value="1.0" /> 
  </node> 

  <node pkg="nodelet" type="nodelet" name="openni_camera" args="load openni_camera/OpenNINodelet openni_manager" respawn="true">
    <!--   
    <param name="rgb_frame_id" value="camera_rgb_optical_frame" />
    <param name="depth_frame_id" value="camera_depth_optical_frame" />
    <param name="depth_registration" value="true" />
    <param name="image_mode" value="2" />
    <param name="depth_mode" value="2" />
    <param name="debayering" value="2" />
    <param name="depth_time_offset" value="-0.055" />
    <param name="image_time_offset" value="0" /> -->

    <rosparam command="load" file="$(find openni_camera)/info/openni_params.yaml" />
    <param name="rgb_frame_id" value="camera_rgb_optical_frame" />
    <param name="depth_frame_id" value="camera_depth_optical_frame" />
    <!-- <param name="use_indices" value="false" /> -->
    <param name="depth_registration" value="true" />
    <param name="image_mode" value="8" />
    <param name="depth_mode" value="8" />
    <param name="debayering" value="0" />
    <param name="depth_time_offset" value="0" />
    <param name="image_time_offset" value="0" />

    <!--<rosparam command="load" file="$(find openni_camera)/info/openni_params.yaml" />    -->
  </node>

  <!-- throttling -->
  <node pkg="nodelet" type="nodelet" name="pointcloud_throttle" args="load pointcloud_to_laserscan/CloudThrottle openni_manager" respawn="true">
    <param name="max_rate" value="20.0"/>
    <remap from="cloud_in" to="/camera/depth/points"/>
    <remap from="cloud_out" to="cloud_throttled"/>
  </node>

  <!-- Fake Laser -->
  <node pkg="nodelet" type="nodelet" name="kinect_laser" args="load pointcloud_to_laserscan/CloudToScan openni_manager" respawn="true">
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <!-- heights are in the (optical?) frame of the kinect -->
    <param name="min_height" value="-0.15"/>
    <param name="max_height" value="0.15"/>
    <remap from="cloud" to="/cloud_throttled"/>
  </node>

  <!-- Fake Laser (narrow one, for localization -->
  <node pkg="nodelet" type="nodelet" name="kinect_laser_narrow" args="load pointcloud_to_laserscan/CloudToScan openni_manager" respawn="true">
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <!-- heights are in the (optical?) frame of the kinect -->
    <param name="min_height" value="-0.025"/>
    <param name="max_height" value="0.025"/>
    <remap from="cloud" to="/cloud_throttled"/>
    <remap from="scan" to="/narrow_scan"/>
  </node>
</launch>

